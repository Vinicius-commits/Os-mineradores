//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Scripts/Inputs/Inputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Inputs: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Inputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Inputs"",
    ""maps"": [
        {
            ""name"": ""MovimentoPlayer"",
            ""id"": ""1c8fa060-968c-4596-b95e-59f4394a393a"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""40850b56-41a8-45ec-92d4-b1227c6d4a5f"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Sprint"",
                    ""type"": ""Button"",
                    ""id"": ""8a7463d3-a903-4acb-82e2-095b644fab8b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Elevator"",
                    ""type"": ""Button"",
                    ""id"": ""217d276c-ba19-455d-8f89-80b0fb51caf8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""34f77dc6-951e-439b-8404-80045bb9435d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpaceBar"",
                    ""type"": ""Button"",
                    ""id"": ""7a8c566d-e1d8-487c-84de-5b56b004a023"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Agua"",
                    ""type"": ""Button"",
                    ""id"": ""3e27f8f8-3e66-4536-b034-d3829353d2c8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Pausa"",
                    ""type"": ""Button"",
                    ""id"": ""041891f9-24c9-4588-8c80-c8637285fbae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Lanterna"",
                    ""type"": ""Button"",
                    ""id"": ""425ab2a0-7f5a-4f5c-93f8-9524e1a6d640"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d9fd7302-0eb3-4ec3-8242-bc3b05fd2683"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""ef17b18b-82d3-4dc4-a9e7-3ac95c72216f"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""Up"",
                    ""id"": ""d777e02a-49b9-4938-b9dd-b97fa713c20a"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Down"",
                    ""id"": ""311959f9-2c86-4dd9-8cb3-4171168c9b7a"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Left"",
                    ""id"": ""e30910aa-d763-464e-92ff-9b96bbce1a28"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Right"",
                    ""id"": ""6b1662c5-95a2-4fab-a5ca-164ad1e231ad"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""ddbcfaf9-5908-4105-9c70-1d174e7de04f"",
                    ""path"": ""<Keyboard>/leftShift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""833633b7-4d0f-48b8-8b84-de1e66b30802"",
                    ""path"": ""<Gamepad>/leftTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sprint"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""391d51d6-29fa-4f05-aafa-d0244ac64304"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevator"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f53daf11-18d8-400c-b45b-8472203f47fa"",
                    ""path"": ""<XInputController>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Elevator"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0afc74db-5666-45d2-8a85-4c2a137cabfd"",
                    ""path"": ""<XInputController>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc89767e-b8e2-4d3c-af82-b6b7e5afc2d2"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""631cccce-171a-4894-9075-ede8ddd1f008"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpaceBar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1c898de1-682c-4349-b2d2-a5bfaa23e1dc"",
                    ""path"": ""<XInputController>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpaceBar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3c1dd60f-4697-4541-a8f7-99590635ca41"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Agua"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c39eb1db-32ef-43ab-a077-f5ebe95c282b"",
                    ""path"": ""<XInputController>/buttonEast"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Agua"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""134b8e2d-ab75-4dfe-807e-f781192ee34f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""138dd83c-8f22-4ba5-9032-2be9d3c4a46c"",
                    ""path"": ""<XInputController>/start"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Pausa"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1f912174-13c8-443c-9deb-29757360cdfa"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Lanterna"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""CameraMovimento"",
            ""id"": ""78cbf169-68fa-4a56-a10b-3e105495846a"",
            ""actions"": [
                {
                    ""name"": ""CameraRotationY"",
                    ""type"": ""Value"",
                    ""id"": ""d17bcb1f-7362-46c2-b19e-f982beae3d8a"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""0a8d69aa-ed28-4273-a677-e5b4fdf23e75"",
                    ""path"": ""<Mouse>/delta/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotationY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""32fe5db8-862b-4cdb-85f1-4ef989115190"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraRotationY"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MovimentoPlayer
        m_MovimentoPlayer = asset.FindActionMap("MovimentoPlayer", throwIfNotFound: true);
        m_MovimentoPlayer_Move = m_MovimentoPlayer.FindAction("Move", throwIfNotFound: true);
        m_MovimentoPlayer_Sprint = m_MovimentoPlayer.FindAction("Sprint", throwIfNotFound: true);
        m_MovimentoPlayer_Elevator = m_MovimentoPlayer.FindAction("Elevator", throwIfNotFound: true);
        m_MovimentoPlayer_Interaction = m_MovimentoPlayer.FindAction("Interaction", throwIfNotFound: true);
        m_MovimentoPlayer_SpaceBar = m_MovimentoPlayer.FindAction("SpaceBar", throwIfNotFound: true);
        m_MovimentoPlayer_Agua = m_MovimentoPlayer.FindAction("Agua", throwIfNotFound: true);
        m_MovimentoPlayer_Pausa = m_MovimentoPlayer.FindAction("Pausa", throwIfNotFound: true);
        m_MovimentoPlayer_Lanterna = m_MovimentoPlayer.FindAction("Lanterna", throwIfNotFound: true);
        // CameraMovimento
        m_CameraMovimento = asset.FindActionMap("CameraMovimento", throwIfNotFound: true);
        m_CameraMovimento_CameraRotationY = m_CameraMovimento.FindAction("CameraRotationY", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MovimentoPlayer
    private readonly InputActionMap m_MovimentoPlayer;
    private List<IMovimentoPlayerActions> m_MovimentoPlayerActionsCallbackInterfaces = new List<IMovimentoPlayerActions>();
    private readonly InputAction m_MovimentoPlayer_Move;
    private readonly InputAction m_MovimentoPlayer_Sprint;
    private readonly InputAction m_MovimentoPlayer_Elevator;
    private readonly InputAction m_MovimentoPlayer_Interaction;
    private readonly InputAction m_MovimentoPlayer_SpaceBar;
    private readonly InputAction m_MovimentoPlayer_Agua;
    private readonly InputAction m_MovimentoPlayer_Pausa;
    private readonly InputAction m_MovimentoPlayer_Lanterna;
    public struct MovimentoPlayerActions
    {
        private @Inputs m_Wrapper;
        public MovimentoPlayerActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_MovimentoPlayer_Move;
        public InputAction @Sprint => m_Wrapper.m_MovimentoPlayer_Sprint;
        public InputAction @Elevator => m_Wrapper.m_MovimentoPlayer_Elevator;
        public InputAction @Interaction => m_Wrapper.m_MovimentoPlayer_Interaction;
        public InputAction @SpaceBar => m_Wrapper.m_MovimentoPlayer_SpaceBar;
        public InputAction @Agua => m_Wrapper.m_MovimentoPlayer_Agua;
        public InputAction @Pausa => m_Wrapper.m_MovimentoPlayer_Pausa;
        public InputAction @Lanterna => m_Wrapper.m_MovimentoPlayer_Lanterna;
        public InputActionMap Get() { return m_Wrapper.m_MovimentoPlayer; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovimentoPlayerActions set) { return set.Get(); }
        public void AddCallbacks(IMovimentoPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_MovimentoPlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_MovimentoPlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Sprint.started += instance.OnSprint;
            @Sprint.performed += instance.OnSprint;
            @Sprint.canceled += instance.OnSprint;
            @Elevator.started += instance.OnElevator;
            @Elevator.performed += instance.OnElevator;
            @Elevator.canceled += instance.OnElevator;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @SpaceBar.started += instance.OnSpaceBar;
            @SpaceBar.performed += instance.OnSpaceBar;
            @SpaceBar.canceled += instance.OnSpaceBar;
            @Agua.started += instance.OnAgua;
            @Agua.performed += instance.OnAgua;
            @Agua.canceled += instance.OnAgua;
            @Pausa.started += instance.OnPausa;
            @Pausa.performed += instance.OnPausa;
            @Pausa.canceled += instance.OnPausa;
            @Lanterna.started += instance.OnLanterna;
            @Lanterna.performed += instance.OnLanterna;
            @Lanterna.canceled += instance.OnLanterna;
        }

        private void UnregisterCallbacks(IMovimentoPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Sprint.started -= instance.OnSprint;
            @Sprint.performed -= instance.OnSprint;
            @Sprint.canceled -= instance.OnSprint;
            @Elevator.started -= instance.OnElevator;
            @Elevator.performed -= instance.OnElevator;
            @Elevator.canceled -= instance.OnElevator;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @SpaceBar.started -= instance.OnSpaceBar;
            @SpaceBar.performed -= instance.OnSpaceBar;
            @SpaceBar.canceled -= instance.OnSpaceBar;
            @Agua.started -= instance.OnAgua;
            @Agua.performed -= instance.OnAgua;
            @Agua.canceled -= instance.OnAgua;
            @Pausa.started -= instance.OnPausa;
            @Pausa.performed -= instance.OnPausa;
            @Pausa.canceled -= instance.OnPausa;
            @Lanterna.started -= instance.OnLanterna;
            @Lanterna.performed -= instance.OnLanterna;
            @Lanterna.canceled -= instance.OnLanterna;
        }

        public void RemoveCallbacks(IMovimentoPlayerActions instance)
        {
            if (m_Wrapper.m_MovimentoPlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IMovimentoPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_MovimentoPlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_MovimentoPlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public MovimentoPlayerActions @MovimentoPlayer => new MovimentoPlayerActions(this);

    // CameraMovimento
    private readonly InputActionMap m_CameraMovimento;
    private List<ICameraMovimentoActions> m_CameraMovimentoActionsCallbackInterfaces = new List<ICameraMovimentoActions>();
    private readonly InputAction m_CameraMovimento_CameraRotationY;
    public struct CameraMovimentoActions
    {
        private @Inputs m_Wrapper;
        public CameraMovimentoActions(@Inputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @CameraRotationY => m_Wrapper.m_CameraMovimento_CameraRotationY;
        public InputActionMap Get() { return m_Wrapper.m_CameraMovimento; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CameraMovimentoActions set) { return set.Get(); }
        public void AddCallbacks(ICameraMovimentoActions instance)
        {
            if (instance == null || m_Wrapper.m_CameraMovimentoActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_CameraMovimentoActionsCallbackInterfaces.Add(instance);
            @CameraRotationY.started += instance.OnCameraRotationY;
            @CameraRotationY.performed += instance.OnCameraRotationY;
            @CameraRotationY.canceled += instance.OnCameraRotationY;
        }

        private void UnregisterCallbacks(ICameraMovimentoActions instance)
        {
            @CameraRotationY.started -= instance.OnCameraRotationY;
            @CameraRotationY.performed -= instance.OnCameraRotationY;
            @CameraRotationY.canceled -= instance.OnCameraRotationY;
        }

        public void RemoveCallbacks(ICameraMovimentoActions instance)
        {
            if (m_Wrapper.m_CameraMovimentoActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ICameraMovimentoActions instance)
        {
            foreach (var item in m_Wrapper.m_CameraMovimentoActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_CameraMovimentoActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public CameraMovimentoActions @CameraMovimento => new CameraMovimentoActions(this);
    public interface IMovimentoPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnSprint(InputAction.CallbackContext context);
        void OnElevator(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnSpaceBar(InputAction.CallbackContext context);
        void OnAgua(InputAction.CallbackContext context);
        void OnPausa(InputAction.CallbackContext context);
        void OnLanterna(InputAction.CallbackContext context);
    }
    public interface ICameraMovimentoActions
    {
        void OnCameraRotationY(InputAction.CallbackContext context);
    }
}
